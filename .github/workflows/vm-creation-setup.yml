name: Create VM (lightsail) and setup VM

on:
  push:
    branches:
      - main
      - master

jobs:
  configure-aws-cli-runs-on-commit-message:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'SETUP') # Check if commit message contains 'SETUP'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Create Lightsail Instance
        run: |
          INSTANCE_NAME="${{ github.event.repository.name }}"
          aws lightsail create-instances \
          --instance-names $INSTANCE_NAME \
          --availability-zone ap-south-1a \
          --blueprint-id ubuntu_22_04 \
          --bundle-id small_3_1

      - name: Wait for Instance to be Running
        run: |
          INSTANCE_NAME="${{ github.event.repository.name }}"
          while true; do
            STATUS=$(aws lightsail get-instance --instance-name $INSTANCE_NAME --query 'instance.state.name' --output text)
            if [ "$STATUS" == "running" ]; then
              echo "Instance is running."
              break
            else
              echo "Current status: $STATUS. Waiting..."
              sleep 10
            fi
          done
      
      - name: Get Instance Public IP
        id: get_ip
        run: |
          INSTANCE_NAME="${{ github.event.repository.name }}"
          INSTANCE_IP=$(aws lightsail get-instance --instance-name $INSTANCE_NAME --query 'instance.publicIpAddress' --output text)
          echo "INSTANCE_IP=${INSTANCE_IP}" >> $GITHUB_ENV
      
      - name: SSH into Lightsail Instance and Run Script
        run: |
          # Wait for a few seconds to ensure the instance is accessible
          sleep 90
          
          # Copy the SSH key
          mkdir -p ~/.ssh
          echo "${{ secrets.DEFAULT_SSH_PRIVATE_KEY }}" > ~/.ssh/github
          chmod 400 ~/.ssh/github

          echo "Current Directory: $(pwd)"; echo "Directory Contents: $(ls)"; 

          echo "$INSTANCE_IP"

          # Connect and setup VM
          ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/github ubuntu@${{ env.INSTANCE_IP }} 'bash -s' < ./startup.sh
